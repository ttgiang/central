<%@ page import="org.apache.log4j.Logger"%>
<%@ page import="java.sql.*"%>
<%@ page import="java.io.*"%>
<%@ page import="java.util.*"%>

<%@ page import="com.ase.aseutil.AseUtil"%>
<%@ page import="com.ase.exception.CentralException"%>

<%@ page import="java.lang.reflect.*"%>
<%@ page import="java.util.jar.*"%>

<%@ page import="com.ase.aseutil.xml.CreateXml"%>

<%@ include file="ase.jsp" %>

<%
	String pageTitle = "Course Approval History";
	fieldsetTitle = pageTitle;
%>

<html>
<head>
	<%@ include file="ase2.jsp" %>
	<%@ include file="fckeditor.jsp" %>
	<script language="JavaScript" src="js/test.js"></script>
</head>
<body topmargin="0" leftmargin="0">

<table border="0" width="100%" id="table1" cellspacing="3" cellpadding="3">
	<tr>
		<td>
<%
	/**
	*	ASE
	*	creates HTML of course approval comments
	**/

	boolean processPage = true;

	// authorized to edit?
	if ( !aseUtil.checkSecurityLevel(aseUtil.FACULTY,session,response,request).equals("") ){
		response.sendRedirect("../exp/notauth.jsp");
		processPage = false;
	}

	String campus = website.getRequestParameter(request,"cps","",false);

	System.out.println("Start<br/>");

	if (processPage){
		try{
			if (!campus.equals(Constant.BLANK)){
				out.println(createOutlineComments(conn,campus) + " outlines written");
			}
		} catch (Exception e){
			System.err.println (e.toString());
		}
	}

	System.out.println("<br/>End");

	asePool.freeConnection(conn," ","");
%>

<%!
	public static int createOutlineComments(Connection conn,String campus) throws Exception {

		Logger logger = Logger.getLogger("test");

		int outlinesWritten = 0;

		boolean methodCreatedConnection = false;
		String kix = "B59b26j12237";
		String type = "CUR";
		String user = "";

		try{
			if (conn == null){
				conn = AsePool.createLongConnection();
				methodCreatedConnection = true;
			}

			if (conn != null){

				FileWriter fstream = null;
				BufferedWriter output = null;

				try {
					String currentDrive = AseUtil.getCurrentDrive();
					String documents = SysDB.getSys(conn,"documents");
					String fileName = currentDrive
												+ ":"
												+ documents
												+ "outlines\\"
												+ campus
												+ "\\";

					String sql = "select historyid from tblcourse where campus=? and historyid='S51j24b13138' and coursetype='CUR'";
					PreparedStatement ps = conn.prepareStatement(sql);
					ps.setString(1,campus);
					ResultSet rs = ps.executeQuery();
					while (rs.next()) {
						kix = AseUtil.nullToBlank(rs.getString("historyid"));

						String htmlfile = fileName + kix + "_comments.html";

						try{
							fstream = new FileWriter(htmlfile);
							output = new BufferedWriter(fstream);

							// source for page is from crsinfy
							// approval history
							String aphist = "<br/>"
								+"<table border=\"0\" width=\"660\" class=\"tableCaption\">"
								+"<tr>"
								+"<td align=\"left\"><hr size=1><a style=\"text-decoration:none\" name=\"approval_history\"  class=\"goldhighlights\">Approval History</a></td>"
								+"</tr>"
								+"<tr bgcolor=\"#ffffff\">"
								+"<td>"
								+"<table border=\"0\" cellpadding=\"2\" width=\"100%\">";
							output.write(aphist);

							ArrayList list = HistoryDB.getHistories(conn,kix,type);
							if (list != null){
								History history;
								aphist = "";
								for (int i=0; i<list.size(); i++){
									history = (History)list.get(i);
									aphist += "<tr class=\"textblackTH\"><td valign=top>" + history.getDte() + " - " + history.getApprover() + "</td></tr>"
										+ "<tr><td class=\"datacolumn\" valign=top>" + history.getComments() + "</td></tr>";
								}
								output.write(aphist);
							}
							aphist = "</table>"
								+"</td>"
								+"</tr>"
								+"</table>";
							output.write(aphist);

							// approver comments
							aphist = "";

							int fid = ForumDB.getForumID(conn,campus,kix);
							if (fid == 0){
								aphist = "<table width=\"680\" cellspacing=\"1\" cellpadding=\"4\"><tr><td>";
								aphist += "<br><hr size=1>" + ReviewerDB.getReviewHistory2(conn,kix,0,campus,0,Constant.REVIEW,"h0","c0");
								aphist += "<br><hr size=1>" + ReviewerDB.getReviewHistory2(conn,kix,0,campus,0,Constant.APPROVAL,"h1","c1");
								aphist += "<br><hr size=1>" + ReviewerDB.getReviewHistory2(conn,kix,0,campus,0,Constant.REVIEW_IN_APPROVAL,"h2","c2");
								aphist += "</td></tr></table><br><br>";
								if(aphist != null){
									aphist = aphist.replace("display: none;","display: nn;");
								}
							}
							else{
								if (fid > 0){
									aphist = "<table width=\"100%\" cellspacing=\"1\" cellpadding=\"4\"><tbody>";
									int k = 0;
									String clss = "";
									for(com.ase.aseutil.Generic u: com.ase.aseutil.ForumDB.getUserPosts(conn,fid,0)){
										++k;
										int mid = Integer.parseInt(u.getString6());
										int item = Integer.parseInt(u.getString9());
										aphist += "<tr class=\""+clss+"\"><td style=\"text-align:left;\">";
										aphist += Board.printChildren(conn,fid,item,0,0,mid,user);
										aphist += "</td></tr>";
									} // for

									aphist += "</tbody></table><br><br>";
								} // if fid

							} // if enableMessageBoard

							if(!aphist.equals("")){
								output.write(aphist);
							}

						}
						catch(Exception e){
							System.out.println("failed to create outline");
						}
						finally{
							output.close();
						}

						++outlinesWritten;

					} // while
					rs.close();
					ps.close();
				}
				catch(Exception e){
					System.out.println("fail to process data");
				}

				// release connection
				try{
					if (conn != null){
						conn.close();
						conn = null;
					}
				}
				catch(Exception e){
					logger.fatal("createOutlineComments: " + e.toString());
				}

			} // conm

			// only if the connection was created here
			if (methodCreatedConnection){
				try{
					conn.close();
					conn = null;
				}
				catch(Exception e){
					logger.fatal("createOutlineComments: " + e.toString());
				}

			} // methodCreatedConnection

		}
		catch(Exception e){
			logger.fatal("createOutlineComments: " + e.toString());
		}

		return outlinesWritten;

	}

%>

		</td>
	</tr>
</table>

</body>
</html
